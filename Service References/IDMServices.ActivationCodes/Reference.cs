//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VigoBAS_Start.IDMServices.ActivationCodes {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/Users.Metadata")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPublishingWorkMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalizedJobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryDepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivatePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialSecurityNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsePrivateMobileForWorkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPublishingWorkMobile {
            get {
                return this.AllowPublishingWorkMobileField;
            }
            set {
                if ((this.AllowPublishingWorkMobileField.Equals(value) != true)) {
                    this.AllowPublishingWorkMobileField = value;
                    this.RaisePropertyChanged("AllowPublishingWorkMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalizedJobTitle {
            get {
                return this.PersonalizedJobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalizedJobTitleField, value) != true)) {
                    this.PersonalizedJobTitleField = value;
                    this.RaisePropertyChanged("PersonalizedJobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalLocation {
            get {
                return this.PostalLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalLocationField, value) != true)) {
                    this.PostalLocationField = value;
                    this.RaisePropertyChanged("PostalLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryDepartment {
            get {
                return this.PrimaryDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryDepartmentField, value) != true)) {
                    this.PrimaryDepartmentField = value;
                    this.RaisePropertyChanged("PrimaryDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryDepartmentName {
            get {
                return this.PrimaryDepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryDepartmentNameField, value) != true)) {
                    this.PrimaryDepartmentNameField = value;
                    this.RaisePropertyChanged("PrimaryDepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateEmail {
            get {
                return this.PrivateEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateEmailField, value) != true)) {
                    this.PrivateEmailField = value;
                    this.RaisePropertyChanged("PrivateEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateMobile {
            get {
                return this.PrivateMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateMobileField, value) != true)) {
                    this.PrivateMobileField = value;
                    this.RaisePropertyChanged("PrivateMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivatePhone {
            get {
                return this.PrivatePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivatePhoneField, value) != true)) {
                    this.PrivatePhoneField = value;
                    this.RaisePropertyChanged("PrivatePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialSecurityNumber {
            get {
                return this.SocialSecurityNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialSecurityNumberField, value) != true)) {
                    this.SocialSecurityNumberField = value;
                    this.RaisePropertyChanged("SocialSecurityNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsePrivateMobileForWork {
            get {
                return this.UsePrivateMobileForWorkField;
            }
            set {
                if ((this.UsePrivateMobileForWorkField.Equals(value) != true)) {
                    this.UsePrivateMobileForWorkField = value;
                    this.RaisePropertyChanged("UsePrivateMobileForWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidTo {
            get {
                return this.ValidToField;
            }
            set {
                if ((this.ValidToField.Equals(value) != true)) {
                    this.ValidToField = value;
                    this.RaisePropertyChanged("ValidTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkEmail {
            get {
                return this.WorkEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkEmailField, value) != true)) {
                    this.WorkEmailField = value;
                    this.RaisePropertyChanged("WorkEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkMobile {
            get {
                return this.WorkMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkMobileField, value) != true)) {
                    this.WorkMobileField = value;
                    this.RaisePropertyChanged("WorkMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkPhone {
            get {
                return this.WorkPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkPhoneField, value) != true)) {
                    this.WorkPhoneField = value;
                    this.RaisePropertyChanged("WorkPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivationCodes.ActivationCodeType", Namespace="http://schemas.datacontract.org/2004/07/Users.Buddy")]
    public enum ActivationCodesActivationCodeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Glemt = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveActivationCodes", Namespace="http://schemas.datacontract.org/2004/07/Users.Metadata")]
    [System.SerializableAttribute()]
    public partial class ActiveActivationCodes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activationcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string expiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string privatemobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool usedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usertypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string workemailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string workmobileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string activationcode {
            get {
                return this.activationcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.activationcodeField, value) != true)) {
                    this.activationcodeField = value;
                    this.RaisePropertyChanged("activationcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentField, value) != true)) {
                    this.departmentField = value;
                    this.RaisePropertyChanged("department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string expires {
            get {
                return this.expiresField;
            }
            set {
                if ((object.ReferenceEquals(this.expiresField, value) != true)) {
                    this.expiresField = value;
                    this.RaisePropertyChanged("expires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstnameField, value) != true)) {
                    this.firstnameField = value;
                    this.RaisePropertyChanged("firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastnameField, value) != true)) {
                    this.lastnameField = value;
                    this.RaisePropertyChanged("lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string privatemobile {
            get {
                return this.privatemobileField;
            }
            set {
                if ((object.ReferenceEquals(this.privatemobileField, value) != true)) {
                    this.privatemobileField = value;
                    this.RaisePropertyChanged("privatemobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool used {
            get {
                return this.usedField;
            }
            set {
                if ((this.usedField.Equals(value) != true)) {
                    this.usedField = value;
                    this.RaisePropertyChanged("used");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string usertype {
            get {
                return this.usertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.usertypeField, value) != true)) {
                    this.usertypeField = value;
                    this.RaisePropertyChanged("usertype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string workemail {
            get {
                return this.workemailField;
            }
            set {
                if ((object.ReferenceEquals(this.workemailField, value) != true)) {
                    this.workemailField = value;
                    this.RaisePropertyChanged("workemail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string workmobile {
            get {
                return this.workmobileField;
            }
            set {
                if ((object.ReferenceEquals(this.workmobileField, value) != true)) {
                    this.workmobileField = value;
                    this.RaisePropertyChanged("workmobile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateActivationCodesResult", Namespace="http://schemas.datacontract.org/2004/07/Users.Metadata")]
    [System.SerializableAttribute()]
    public partial class ValidateActivationCodesResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://basservices.vigobas.no/Users/ActivationCodes", ConfigurationName="IDMServices.ActivationCodes.IActivationCodes")]
    public interface IActivationCodes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByPho" +
            "nenumber", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByPho" +
            "nenumberResponse")]
        VigoBAS_Start.IDMServices.ActivationCodes.Profile GetUserByPhonenumber(string phonenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByPho" +
            "nenumber", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByPho" +
            "nenumberResponse")]
        System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.Profile> GetUserByPhonenumberAsync(string phonenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByUse" +
            "rname", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByUse" +
            "rnameResponse")]
        VigoBAS_Start.IDMServices.ActivationCodes.Profile GetUserByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByUse" +
            "rname", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUserByUse" +
            "rnameResponse")]
        System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.Profile> GetUserByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCode", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCodeResponse")]
        void SetAndSendActivationCode(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCode", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCodeResponse")]
        System.Threading.Tasks.Task SetAndSendActivationCodeAsync(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserBySMS", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserBySMSResponse")]
        void SendActivationCodeForUserBySMS(string username, string activationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserBySMS", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserBySMSResponse")]
        System.Threading.Tasks.Task SendActivationCodeForUserBySMSAsync(string username, string activationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserByEmail", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserByEmailResponse")]
        void SendActivationCodeForUserByEmail(string username, string activationCode, string emailAddress, bool bodyIsHtml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserByEmail", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SendActivati" +
            "onCodeForUserByEmailResponse")]
        System.Threading.Tasks.Task SendActivationCodeForUserByEmailAsync(string username, string activationCode, string emailAddress, bool bodyIsHtml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCodeAsAdmin", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCodeAsAdminResponse")]
        string SetAndSendActivationCodeAsAdmin(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCodeAsAdmin", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetAndSendAc" +
            "tivationCodeAsAdminResponse")]
        System.Threading.Tasks.Task<string> SetAndSendActivationCodeAsAdminAsync(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInGroup", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInGroupResponse")]
        VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[] ActiveActivationCodesInGroup(string groupname, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInGroup", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInGroupResponse")]
        System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[]> ActiveActivationCodesInGroupAsync(string groupname, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInExternalGroup", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInExternalGroupResponse")]
        VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[] ActiveActivationCodesInExternalGroup(string groupname, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInExternalGroup", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesInExternalGroupResponse")]
        System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[]> ActiveActivationCodesInExternalGroupAsync(string groupname, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesForUser", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesForUserResponse")]
        VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[] ActiveActivationCodesForUser(string username, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesForUser", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ActiveActiva" +
            "tionCodesForUserResponse")]
        System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[]> ActiveActivationCodesForUserAsync(string username, string requestor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCode", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCodeResponse")]
        bool ValidateActivationCode(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCode", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCodeResponse")]
        System.Threading.Tasks.Task<bool> ValidateActivationCodeAsync(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCodeWithResult", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCodeWithResultResponse")]
        VigoBAS_Start.IDMServices.ActivationCodes.ValidateActivationCodesResult ValidateActivationCodeWithResult(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCodeWithResult", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/ValidateActi" +
            "vationCodeWithResultResponse")]
        System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ValidateActivationCodesResult> ValidateActivationCodeWithResultAsync(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetActiveDir" +
            "ectoryPassword", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetActiveDir" +
            "ectoryPasswordResponse")]
        void SetActiveDirectoryPassword(string username, string password, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetActiveDir" +
            "ectoryPassword", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/SetActiveDir" +
            "ectoryPasswordResponse")]
        System.Threading.Tasks.Task SetActiveDirectoryPasswordAsync(string username, string password, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUsername", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUsernameR" +
            "esponse")]
        void GetUsername(string phonenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUsername", ReplyAction="http://basservices.vigobas.no/Users/ActivationCodes/IActivationCodes/GetUsernameR" +
            "esponse")]
        System.Threading.Tasks.Task GetUsernameAsync(string phonenumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActivationCodesChannel : VigoBAS_Start.IDMServices.ActivationCodes.IActivationCodes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivationCodesClient : System.ServiceModel.ClientBase<VigoBAS_Start.IDMServices.ActivationCodes.IActivationCodes>, VigoBAS_Start.IDMServices.ActivationCodes.IActivationCodes {
        
        public ActivationCodesClient() {
        }
        
        public ActivationCodesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActivationCodesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationCodesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivationCodesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public VigoBAS_Start.IDMServices.ActivationCodes.Profile GetUserByPhonenumber(string phonenumber) {
            return base.Channel.GetUserByPhonenumber(phonenumber);
        }
        
        public System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.Profile> GetUserByPhonenumberAsync(string phonenumber) {
            return base.Channel.GetUserByPhonenumberAsync(phonenumber);
        }
        
        public VigoBAS_Start.IDMServices.ActivationCodes.Profile GetUserByUsername(string username) {
            return base.Channel.GetUserByUsername(username);
        }
        
        public System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.Profile> GetUserByUsernameAsync(string username) {
            return base.Channel.GetUserByUsernameAsync(username);
        }
        
        public void SetAndSendActivationCode(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            base.Channel.SetAndSendActivationCode(username, type);
        }
        
        public System.Threading.Tasks.Task SetAndSendActivationCodeAsync(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            return base.Channel.SetAndSendActivationCodeAsync(username, type);
        }
        
        public void SendActivationCodeForUserBySMS(string username, string activationCode) {
            base.Channel.SendActivationCodeForUserBySMS(username, activationCode);
        }
        
        public System.Threading.Tasks.Task SendActivationCodeForUserBySMSAsync(string username, string activationCode) {
            return base.Channel.SendActivationCodeForUserBySMSAsync(username, activationCode);
        }
        
        public void SendActivationCodeForUserByEmail(string username, string activationCode, string emailAddress, bool bodyIsHtml) {
            base.Channel.SendActivationCodeForUserByEmail(username, activationCode, emailAddress, bodyIsHtml);
        }
        
        public System.Threading.Tasks.Task SendActivationCodeForUserByEmailAsync(string username, string activationCode, string emailAddress, bool bodyIsHtml) {
            return base.Channel.SendActivationCodeForUserByEmailAsync(username, activationCode, emailAddress, bodyIsHtml);
        }
        
        public string SetAndSendActivationCodeAsAdmin(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type, string requestor) {
            return base.Channel.SetAndSendActivationCodeAsAdmin(username, type, requestor);
        }
        
        public System.Threading.Tasks.Task<string> SetAndSendActivationCodeAsAdminAsync(string username, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type, string requestor) {
            return base.Channel.SetAndSendActivationCodeAsAdminAsync(username, type, requestor);
        }
        
        public VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[] ActiveActivationCodesInGroup(string groupname, string requestor) {
            return base.Channel.ActiveActivationCodesInGroup(groupname, requestor);
        }
        
        public System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[]> ActiveActivationCodesInGroupAsync(string groupname, string requestor) {
            return base.Channel.ActiveActivationCodesInGroupAsync(groupname, requestor);
        }
        
        public VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[] ActiveActivationCodesInExternalGroup(string groupname, string requestor) {
            return base.Channel.ActiveActivationCodesInExternalGroup(groupname, requestor);
        }
        
        public System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[]> ActiveActivationCodesInExternalGroupAsync(string groupname, string requestor) {
            return base.Channel.ActiveActivationCodesInExternalGroupAsync(groupname, requestor);
        }
        
        public VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[] ActiveActivationCodesForUser(string username, string requestor) {
            return base.Channel.ActiveActivationCodesForUser(username, requestor);
        }
        
        public System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ActiveActivationCodes[]> ActiveActivationCodesForUserAsync(string username, string requestor) {
            return base.Channel.ActiveActivationCodesForUserAsync(username, requestor);
        }
        
        public bool ValidateActivationCode(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            return base.Channel.ValidateActivationCode(username, activationCode, type);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateActivationCodeAsync(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            return base.Channel.ValidateActivationCodeAsync(username, activationCode, type);
        }
        
        public VigoBAS_Start.IDMServices.ActivationCodes.ValidateActivationCodesResult ValidateActivationCodeWithResult(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            return base.Channel.ValidateActivationCodeWithResult(username, activationCode, type);
        }
        
        public System.Threading.Tasks.Task<VigoBAS_Start.IDMServices.ActivationCodes.ValidateActivationCodesResult> ValidateActivationCodeWithResultAsync(string username, string activationCode, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            return base.Channel.ValidateActivationCodeWithResultAsync(username, activationCode, type);
        }
        
        public void SetActiveDirectoryPassword(string username, string password, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            base.Channel.SetActiveDirectoryPassword(username, password, type);
        }
        
        public System.Threading.Tasks.Task SetActiveDirectoryPasswordAsync(string username, string password, VigoBAS_Start.IDMServices.ActivationCodes.ActivationCodesActivationCodeType type) {
            return base.Channel.SetActiveDirectoryPasswordAsync(username, password, type);
        }
        
        public void GetUsername(string phonenumber) {
            base.Channel.GetUsername(phonenumber);
        }
        
        public System.Threading.Tasks.Task GetUsernameAsync(string phonenumber) {
            return base.Channel.GetUsernameAsync(phonenumber);
        }
    }
}
